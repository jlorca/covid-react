{"ast":null,"code":"var _jsxFileName = \"/Users/jesuslorcaluque/eclipse-j2ee-workspace/covid/src/components/CountryPicker/CountryPicker.jsx\";\n\n/*import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api/services\";\n\n// destructure props attribute (contains the handler)\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFechedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFechedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFechedCountries]);\n\n  console.log(\"j.fetchedCountries = \", fetchedCountries);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;*/\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, TextField } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api/services\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // destructure props attribute (contains the handler)\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [fetchedCountries, setFechedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFechedCountries((await fetchCountries()));\n    };\n\n    fetchAPI();\n  }, [setFechedCountries]);\n  console.log(\"j.fetchedCountries = \", fetchedCountries);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"countries-combo\",\n    options: fetchedCountries,\n    getOptionLabel: country => country,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Countries\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })),\n    onChange: (ev, selectedCountry) => handleCountryChange(selectedCountry),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/jesuslorcaluque/eclipse-j2ee-workspace/covid/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","FormControl","TextField","styles","fetchCountries","Autocomplete","CountryPicker","handleCountryChange","fetchedCountries","setFechedCountries","fetchAPI","console","log","formControl","country","width","params","ev","selectedCountry"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACjD,QAAM,CAACC,gBAAD,EAAmBC,kBAAnB,IAAyCV,QAAQ,CAAC,EAAD,CAAvD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,kBAAkB,EAAC,MAAML,cAAc,EAArB,EAAlB;AACD,KAFD;;AAIAM,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACD,kBAAD,CANM,CAAT;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,gBAArC;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,MAAM,CAACU,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,OAAO,EAAEL,gBAFX;AAGE,IAAA,cAAc,EAAGM,OAAD,IAAaA,OAH/B;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,WAAW,EAAGC,MAAD,iBACX,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ;AAQE,IAAA,QAAQ,EAAE,CAACC,EAAD,EAAKC,eAAL,KAAyBX,mBAAmB,CAACW,eAAD,CARxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CA3BD;;AA6BA,eAAeZ,aAAf","sourcesContent":["/*import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api/services\";\n\n// destructure props attribute (contains the handler)\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFechedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFechedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFechedCountries]);\n\n  console.log(\"j.fetchedCountries = \", fetchedCountries);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;*/\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, TextField } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api/services\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\n// destructure props attribute (contains the handler)\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFechedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFechedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFechedCountries]);\n\n  console.log(\"j.fetchedCountries = \", fetchedCountries);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <Autocomplete\n        id=\"countries-combo\"\n        options={fetchedCountries}\n        getOptionLabel={(country) => country}\n        style={{ width: 300 }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Countries\" variant=\"outlined\" />\n        )}\n        onChange={(ev, selectedCountry) => handleCountryChange(selectedCountry)}\n      />\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n"]},"metadata":{},"sourceType":"module"}