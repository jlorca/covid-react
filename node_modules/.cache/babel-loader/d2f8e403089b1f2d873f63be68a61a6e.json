{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://covid19.mathdro.id/api\"; // export const fetchData = async () => {\n//   try {\n//       // destructure 1\n//     const { data } = await axios.get(BASE_URL);\n//     return {\n//       confirmed: data.confirmed,\n//       recovered: data.recovered,\n//       deaths: data.deaths,\n//       lastUpdate: data.lastUpdate,\n//     };\n//   } catch (error) {\n//     console.log(\"j.error = \", error);\n//   }\n// };\n\nexport const fetchData = async country => {\n  let changeableUrl = BASE_URL;\n\n  if (country) {\n    changeableUrl = `${BASE_URL}/countries/${country}`;\n  }\n\n  try {\n    // destructure 2\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    console.log(\"fetchData j.error = \", error);\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${BASE_URL}/daily`);\n    console.log(\"fetchDailyData j.data = \", data);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(\"fetchDailyData j.error = \", error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${BASE_URL}/countries`);\n    console.log(\"countries j.countries = \", countries);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(\"countries j.error = \", error);\n  }\n};","map":{"version":3,"sources":["/Users/jesuslorcaluque/eclipse-j2ee-workspace/covid/src/api/services.js"],"names":["axios","BASE_URL","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","get","error","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,gCAAjB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AAC1C,MAAIC,aAAa,GAAGH,QAApB;;AAEA,MAAIE,OAAJ,EAAa;AACXC,IAAAA,aAAa,GAAI,GAAEH,QAAS,cAAaE,OAAQ,EAAjD;AACD;;AACD,MAAI;AACF;AACA,UAAM;AACJE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AADF,QAEF,MAAMT,KAAK,CAACU,GAAN,CAAUN,aAAV,CAFV;AAIA,WAAO;AACLE,MAAAA,SADK;AAELC,MAAAA,SAFK;AAGLC,MAAAA,MAHK;AAILC,MAAAA;AAJK,KAAP;AAMD,GAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACD;AACF,CArBM;AAuBP,OAAO,MAAMG,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACU,GAAN,CAAW,GAAET,QAAS,QAAtB,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCR,IAAxC;AACA,UAAMU,YAAY,GAAGV,IAAI,CAACW,GAAL,CAAUC,SAAD,KAAgB;AAC5CX,MAAAA,SAAS,EAAEW,SAAS,CAACX,SAAV,CAAoBY,KADa;AAE5CV,MAAAA,MAAM,EAAES,SAAS,CAACT,MAAV,CAAiBU,KAFmB;AAG5CC,MAAAA,IAAI,EAAEF,SAAS,CAACG;AAH4B,KAAhB,CAAT,CAArB;AAKA,WAAOL,YAAP;AACD,GATD,CASE,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACD;AACF,CAbM;AAeP,OAAO,MAAMU,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AACJhB,MAAAA,IAAI,EAAE;AAAEiB,QAAAA;AAAF;AADF,QAEF,MAAMtB,KAAK,CAACU,GAAN,CAAW,GAAET,QAAS,YAAtB,CAFV;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCS,SAAxC;AACA,WAAOA,SAAS,CAACN,GAAV,CAAeb,OAAD,IAAaA,OAAO,CAACoB,IAAnC,CAAP;AACD,GAPD,CAOE,OAAOZ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACD;AACF,CAXM","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://covid19.mathdro.id/api\";\n\n// export const fetchData = async () => {\n//   try {\n//       // destructure 1\n//     const { data } = await axios.get(BASE_URL);\n\n//     return {\n//       confirmed: data.confirmed,\n//       recovered: data.recovered,\n//       deaths: data.deaths,\n//       lastUpdate: data.lastUpdate,\n//     };\n//   } catch (error) {\n//     console.log(\"j.error = \", error);\n//   }\n// };\n\nexport const fetchData = async (country) => {\n  let changeableUrl = BASE_URL;\n\n  if (country) {\n    changeableUrl = `${BASE_URL}/countries/${country}`;\n  }\n  try {\n    // destructure 2\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(\"fetchData j.error = \", error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/daily`);\n    console.log(\"fetchDailyData j.data = \", data);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(\"fetchDailyData j.error = \", error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${BASE_URL}/countries`);\n\n    console.log(\"countries j.countries = \", countries);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(\"countries j.error = \", error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}