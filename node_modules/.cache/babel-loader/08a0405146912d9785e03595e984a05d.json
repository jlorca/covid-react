{"ast":null,"code":"var _jsxFileName = \"/Users/jesuslorcaluque/eclipse-j2ee-workspace/covid/src/App.js\";\nimport React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/services\"; // if the file services.js is renamed as \"index.js\" the import is from \"./api\" because it will try to find first an index\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      country: \"\"\n    };\n\n    this.handleCountryChange = async country => {\n      console.log(\"j.selectedContry = \", country);\n      const fetchedData = await fetchData(country);\n    };\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    console.log(\"j.data\", fetchedData);\n    this.setState({\n      data: fetchedData\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Cards, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CountryPicker, {\n      handleCountryChange: this.handleCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Chart, {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jesuslorcaluque/eclipse-j2ee-workspace/covid/src/App.js"],"names":["React","Cards","Chart","CountryPicker","styles","fetchData","App","Component","state","data","country","handleCountryChange","console","log","fetchedData","componentDidMount","setState","render","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAA4C;;AAE5C,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAFwB;;AAAA,SAahCC,mBAbgC,GAaV,MAAOD,OAAP,IAAmB;AACvCE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,OAAnC;AACA,YAAMI,WAAW,GAAG,MAAMT,SAAS,CAACK,OAAD,CAAnC;AACD,KAhB+B;AAAA;;AAOhC,QAAMK,iBAAN,GAA0B;AACxB,UAAMD,WAAW,GAAG,MAAMT,SAAS,EAAnC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,WAAtB;AACA,SAAKE,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEK;AAAR,KAAd;AACD;;AAMDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAET,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAe,MAAA,mBAAmB,EAAE,KAAKE,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEP,MAAM,CAACc,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA1B+B;;AA6BlC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/services\"; // if the file services.js is renamed as \"index.js\" the import is from \"./api\" because it will try to find first an index\n\nclass App extends React.Component {\n  // the constructor is not needed\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    console.log(\"j.data\", fetchedData);\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    console.log(\"j.selectedContry = \", country);\n    const fetchedData = await fetchData(country);\n  };\n  render() {\n    const { data } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart className={styles.container} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}